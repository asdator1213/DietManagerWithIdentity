@using Microsoft.AspNet.Identity
@model DietManagerIdentity.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
}


<div class="container">
    <div class="add-patient-card card-container">
        <p class="text-success">@ViewBag.StatusMessage</p>
        <p id="profile-name" class="profile-name-card" style="margin-bottom: 40px; letter-spacing: 2px;">
            Change your password
        </p>
        
        @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-signin", role = "form" }))
        {
            @Html.AntiForgeryToken()

            <div class="row">
                <div class="col-md-6 add-patient-label-center">
                    @Html.LabelFor(model => model.OldPassword, new { @class = "add-patient-label" })
                </div>
                <div class="col-md-6 ">
                    @Html.TextBoxFor(model => model.OldPassword, new
                    {
                        id = "inputLogin",
                        @class = "form-control",
                        placeholder = "Old password",
                        required = "required",
                        type = "password",
                        autofocus = "autofocus"
                    })
                    @Html.ValidationMessageFor(x => x.OldPassword, "", new { @class = "field-validation-error" })
                </div>


            </div>
            <div class="row">
                <div class="col-md-6 add-patient-label-center">
                    @Html.LabelFor(model => model.NewPassword, new { @class = "add-patient-label" })
                </div>
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.NewPassword, new
                    {
                        id = "inputPassword",
                        @class = "form-control",
                        placeholder = "New password",
                        required = "required",
                        type = "password",
                        Value = ""
                    })
                    @Html.ValidationMessageFor(x => x.NewPassword, "", new { @class = "field-validation-error" })
                </div>


            </div>
            <div class="row">
                <div class="col-md-6 add-patient-label-center">
                    @Html.LabelFor(model => model.ConfirmPassword, new { @class = "add-patient-label" })
                </div>
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.ConfirmPassword, new
                    {
                        id = "inputPassword",
                        @class = "form-control",
                        placeholder = "Confirm password",
                        required = "required",
                        type = "password",
                        Value = ""
                    })
                    @Html.ValidationMessageFor(x => x.ConfirmPassword, "", new { @class = "field-validation-error" })

                </div>
            </div>

            <div class="row btns-nav">
                <button class="btn btn-lg btn-info btn-block btn-signin" type="submit">Save</button>
                @{
                    var action = "";
                    var controller = "";
                    if (User.IsInRole("Dietician"))
                    {
                        action = "Patients";
                        controller = "Dietician";
                    }
                    if (User.IsInRole("Admin"))
                    {
                        action = "Dieticians";
                        controller = "Dietician";
                    }
                }
                @Html.ActionLink("Back", @action, @controller, null, new{ @class = "btn btn-lg btn-info btn-block btn-back"})
            </div>

        }

    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
